var jsQR = (function () { 'use strict'; function a(a, b) { return a.get(b.x, b.y); } function b(a, b, c) { return a.set(b.x, b.y, c); } function c(a, b) { for (var c = 0, d = 0; d < b.length; d++) { var e = b[d], f = a.x - e.x, g = a.y - e.y; c += Math.sqrt(f * f + g * g); } return c / b.length; } function d(a, b) { var c = a.x - b.x, d = a.y - b.y; return Math.sqrt(c * c + d * d); } function e(a) { return { x: Math.floor(a.x), y: Math.floor(a.y) }; } function f(a) { return { x: a.x, y: a.y }; } function g(a, b) { var c = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0; for (var t = 0; t < b.length; t++) { var u = b[t]; c += u.x, e += u.y, f += u.x * u.x, g += u.y * u.y, h += u.x * u.y, i += a[t].x, j += a[t].y, k += a[t].x * a[t].x, l += a[t].y * a[t].y, m += a[t].x * a[t].y, n += a[t].x * u.x, o += a[t].x * u.y, p += a[t].y * u.x, q += a[t].y * u.y, r += a[t].x * u.x * u.x, s += a[t].x * u.x * u.y; } var v = b.length, w = f * g - h * h, x = (n * g - o * h) / w, y = (o * f - n * h) / w, z = i - x * c - y * e, A = (p * g - q * h) / w, B = (q * f - p * h) / w, C = j - A * c - B * e, D = (r * g - s * h) / w, E = (s * f - r * h) / w, F = k - D * c - E * e, G = f * l - m * m, H = (D * l - E * m) / G, I = (E * f - D * m) / G, J = F - H * g - I * h; return { a: x, b: y, c: z, d: A, e: B, f: C, g: H, h: I, i: J }; } function h(a, b) { var c = b.a * a.x + b.b * a.y + b.c, d = b.d * a.x + b.e * a.y + b.f, e = b.g * a.x + b.h * a.y + b.i; return { x: c / e, y: d / e }; } var i = function () { function a(a, b, c) { this.width = a, this.height = b, this.data = c || new Uint8ClampedArray(a * b * 4), this.format = 'rgba'; } return a.prototype.get = function (a, b) { if (a < 0 || a >= this.width || b < 0 || b >= this.height) return 0; var c = 4 * (b * this.width + a); return this.data[c] << 24 | this.data[c + 1] << 16 | this.data[c + 2] << 8 | this.data[c + 3]; }, a.prototype.set = function (a, b, c) { if (a < 0 || a >= this.width || b < 0 || b >= this.height) return; var d = 4 * (b * this.width + a); this.data[d] = c >> 24 & 255, this.data[d + 1] = c >> 16 & 255, this.data[d + 2] = c >> 8 & 255, this.data[d + 3] = 255 & c; }, a; }(); function j(a, b) { var c = new i(b, a); for (var d = 0; d < a; d++) for (var e = 0; e < b; e++) { var f = 0; d > 0 && (f += c.get(e, d - 1)), e > 0 && (f += c.get(e - 1, d)), d > 0 && e > 0 && (f -= c.get(e - 1, d - 1)), c.set(e, d, f); } return c; } function k(a, b, c, d, e) { var f = Math.floor(d), g = Math.floor(e), h = a.get(f, g), i = a.get(f + 1, g), j = a.get(f, g + 1), k = a.get(f + 1, g + 1), l = d - f, m = e - g; return (1 - l) * (1 - m) * h + l * (1 - m) * i + (1 - l) * m * j + l * m * k; } function l(a, b, c) { for (var d = new i(a.width, a.height), e = 0; e < a.width; e++) for (var f = 0; f < a.height; f++) { var g = 0; g += 2 * a.get(e, f), g -= a.get(e - 2, f), g -= a.get(e + 2, f), g -= a.get(e, f - 2), g -= a.get(e, f + 2), d.set(e, f, g); } return d; } var m = function () { function a(a, b) { this.x = a, this.y = b; } return a; }(); function n(a, b, c, d, e) { var f = Math.round(e), g = Math.max(0, b - f), h = Math.min(a.width - 1, b + f), i = Math.max(0, c - f), j = Math.min(a.height - 1, c + f), k = 0, l = 0; for (var m = i; m <= j; m++) for (var n = g; n <= h; n++) { var o = a.get(n, m); k += o, l++; } return k / l; } function o(a, b, c) { for (var d = [], e = -1; e <= 1; e++) for (var f = -1; f <= 1; f++) { var g = b + f, h = c + e; if (g >= 0 && g < a.width && h >= 0 && h < a.height) { var i = a.get(g, h); d.push(i); } } return d.sort(function (a, b) { return a - b; }), d[Math.floor(d.length / 2)]; } function p(a) { for (var b = new i(a.width, a.height), c = 8, d = 2, e = a.width / c, f = a.height / c, g = j(a.width, a.height), h = 0; h < c; h++) for (var k = 0; k < c; k++) { var l = 0, m = 0, p = 0; for (var q = 0; q < d; q++) for (var r = 0; r < d; r++) { var s = Math.floor(k * e + (r + .5) * e / d), t = Math.floor(h * f + (q + .5) * f / d), u = Math.floor(.5 * e / d), v = Math.max(0, s - u), w = Math.min(a.width - 1, s + u), x = Math.max(0, t - u), y = Math.min(a.height - 1, t + u), z = g.get(w, y) + g.get(v, x) - g.get(w, x) - g.get(v, y), A = (y - x) * (w - v); l += z, m += z * z, p++; } var B = l / p, C = Math.sqrt(m / p - B * B), D = Math.max(.2, C), E = o(a, Math.floor(k * e + e / 2), Math.floor(h * f + f / 2)); for (var F = 0; F < f; F++) for (var G = 0; G < e; G++) { var H = k * e + G, I = h * f + F; if (H < a.width && I < a.height) { var J = a.get(H, I), K = (J - E) / D; K < -1 && (K = -1), K > 1 && (K = 1); var L = 127.5 * (K + 1); b.set(H, I, L); } } } return b; } var q = { }; return q; })();